openapi: 3.0.0
info:
  title: Library Management System API
  description: This is the API Collection of the Library Management System.
  version: 0.1.9

tags:
  - name: genres
    description: API Collection for Genres

paths:
  /genres:
    get:
      tags:
        - genres
      summary: Returns a list of genres.
      description: This API endpoint returns all the genres.
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: status
          in: query
          schema:
            type: integer
      responses:
        '200':    # status code
          description: A JSON array of genres
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Genre"
        '400':
          description: Invalid genre request
        '500':
          description: Internal Server Error
    post:
      tags:
        - genres
      summary: Add a genre to the system.
      description: This API endpoint used to save a gentre to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostGenre"
      responses:
        '200':    # status code
          description: A JSON array of genres
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Genre"

  /genres/{genre_id}:
    get:
      summary: Returns a single genre by id.
      description: Returns the details of genre by genre id
      tags:
        - genres
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':    # status code
          description: A JSON array of genres
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
        '404':
          description: Genre Not Found
        '500':
          description: Internal Server Error
    delete:
      summary: Deletes a single genre by id.
      description: Deletes  a genre by its genre id
      tags:
        - genres
      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: OK
        '404':
          description: Genre is Not Found
        '500':
          description: Internal Server Error
    put:
      summary: Update a single genre by id.
      description: Updates  a genre by its genre id
      tags:
        - genres
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - name:  ssss
                  $ref: '#/components/schemas/UpdateStatus'
                - $ref: '#/components/schemas/UpdateGenre'

      parameters:
        - name: genre_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: OK
        '404':
          description: Genre is Not Found
        '500':
          description: Internal Server Error
  /genres/{genre_name}:
    get:
      summary: Returns a single genre by id.
      description: Returns the details of genre by genre id
      tags:
        - genres
      parameters:
        - name: genre_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':    # status code
          description: A JSON array of genres
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Genre"
        '404':
          description: Genre Not Found
        '500':
          description: Internal Server Error


components:
  schemas:
    UpdateStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
    UpdateGenre:
      type: object
      properties:
        genre_name:
          type: string
    Genre:
      type: object
      properties:
        id:
          type: integer
        genre_name:
          type: string
        created_date:
          type: string
        last_updated_date:
          type: string
        status:
          schema:
          $ref: '#/components/schemas/Status'
    PostGenre:
      type: object
      properties:
        genre_name:
          type: string
        status:
          schema:
          $ref: '#/components/schemas/Status'
    Status:
      type: string
      enum:
        - ACTIVE
        - DEACTIVE
        - PENDING
        - DELETED